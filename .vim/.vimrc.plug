" https://vi.stackexchange.com/a/18409
set nocompatible

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" Themes
Plug 'chriskempson/base16-vim'
Plug 'sainnhe/vim-color-forest-night'
Plug 'mhartington/oceanic-next'

" Editor
Plug 'tpope/vim-obsession' " continuously updated session files
Plug 'dhruvasagar/vim-prosession' " allows switching between multiple sessions
Plug 'farmergreg/vim-lastplace' " reopen file last position
Plug 'djoshea/vim-autoread' " automatically load file changes into buffer
Plug 'tpope/vim-rsi' " readline style insertion
Plug 'romainl/vim-cool' " search highlighting tweaks
Plug 'nathanaelkane/vim-indent-guides'
Plug 'ap/vim-buftabline' " buffer list at top of window
Plug 'editorconfig/editorconfig-vim'
" Plug 'MattesGroeger/vim-bookmarks'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'suy/vim-context-commentstring'
Plug 'Raimondi/delimitMate' " automatic closing of quotes, parenthesis
" Plug 'ap/vim-css-color' " colourises hex/rgb etc
Plug 'AndrewRadev/switch.vim' " toggles for booleans etc
Plug 'tpope/vim-sleuth' " automatically adjusts 'shiftwidth' and 'expandtab'
Plug 'Shougo/echodoc.vim'
Plug 'junegunn/goyo.vim'

" Tmux
Plug 'benmills/vimux'
Plug 'whatyouhide/vim-tmux-syntax'
Plug 'christoomey/vim-tmux-navigator'
" vim-tmux-clipboard
" vim-tmux-resizer 

" Searching
Plug 'rking/ag.vim'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/fzf' ", { 'dir': '~/.fzf', 'do': './install --all' }

" Linting
Plug 'w0rp/ale'

" prosession
" ---------------
" let g:prosession_default_session = 1

" COC
" Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-json', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/jsonc.vim', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-css', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-html', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-snippets', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-yaml', {'do': 'yarn install --frozen-lockfile'}
Plug 'neoclide/coc-emmet', {'do': 'yarn install --frozen-lockfile'}
Plug 'marlonfan/coc-phpls', {'do': 'yarn install --frozen-lockfile'}
Plug 'fannheyward/coc-styled-components', {'do': 'yarn install --frozen-lockfile'}
Plug 'weirongxu/coc-explorer', {'do': 'yarn install --frozen-lockfile'}
Plug 'voldikss/coc-bookmark', {'do': 'yarn install --frozen-lockfile'}

" Plug 'neoclide/coc-highlight', {'do': 'yarn install --frozen-lockfile'}
" Plug 'wix/import-cost', {'do': 'yarn install --frozen-lockfile'}
" Plug 'neoclide/coc-jest', {'do': 'yarn install --frozen-lockfile'}
" Plug 'marlonfan/coc-phpls', {'do': 'yarn install'}
"
" maybe use this instead of plug for coc stuff?
" let g:coc_global_extensions = ['coc-extension1', 'coc-extension2', 'coc-extension3', 'coc-extension4']
"
" Lightline
Plug 'itchyny/lightline.vim'
Plug 'daviesjamie/vim-base16-lightline'
Plug 'maximbaz/lightline-ale'

" Nerdtree
" Plug 'scrooloose/nerdtree'
" Plug 'Xuyuanp/nerdtree-git-plugin'
" Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
" Plug 'unkiwii/vim-nerdtree-sync'

" Editing

" Languages
Plug 'mattn/emmet-vim'
Plug 'sheerun/vim-polyglot'
" Plug 'leshill/vim-json', { 'for': ['json'] }
" Plug 'kylef/apiblueprint.vim', { 'for': ['apib', 'apiblueprint'] }
" Plug 'chr4/nginx.vim', { 'for': ['conf'] }
" Plug 'cakebaker/scss-syntax.vim', { 'for': ['scss'] }
" Plug 'groenewege/vim-less', { 'for': ['less'] }
Plug 'hail2u/vim-css3-syntax', { 'for': ['css', 'less', 'scss'] }

" Node
Plug 'moll/vim-node', { 'for': ['javascript', 'jsx', 'javascript.jsx'] }
Plug 'watzon/vim-edge-template'
" Plug 'heavenshell/vim-jsdoc',
"   \ { 'for': ['javascript', 'jsx', 'javascript.jsx', 'typescript.tsx'], 'on': 'JsDoc' }

" Typescript
" Plug 'HerringtonDarkholme/yats.vim', { 'for': ['typescript'] }
" Plug 'leafgarland/typescript-vim'
" Plug 'peitalin/vim-jsx-typescript'

" Javascript
" Plug 'pangloss/vim-javascript', { 'for': ['javascript', 'jsx', 'javascript.jsx', 'typescript.tsxx'] }
" Plug 'othree/yajs.vim', { 'for': ['javascript', 'jsx', 'javascript.jsx'] }
" Plug 'othree/javascript-libraries-syntax.vim',
"   \ { 'for': ['javascript', 'jsx', 'javascript.jsx']}
" Plug 'mxw/vim-jsx', { 'for': ['javascript', 'jsx', 'javascript.jsx', 'typescript.tsx'] }
" Plug 'maxmellon/vim-jsx-pretty', { 'for': ['jsx', 'javascript.jsx'] }
" Plug 'styled-components/vim-styled-components',
"   \ { 'branch': 'main', 'for': ['javascript', 'jsx', 'javascript.jsx', 'typescript.tsx']}

" PHP
" Plug 'StanAngeloff/php.vim'
" Plug '2072/vim-syntax-for-PHP', { 'for': ['php'] }
Plug '2072/PHP-Indenting-for-VIm', { 'for': ['php'] }
Plug 'arnaud-lb/vim-php-namespace'
" Plug 'jwalton512/vim-blade'
" Plug 'lvht/phpcd.vim', { 'for': 'php', 'do': 'composer install' }

" Markdown
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }
Plug 'junegunn/limelight.vim', { 'for': 'markdown' }

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Docker
" Plug 'honza/dockerfile.vim', { 'for': ['dockerfile'] }

" Terraform
" Plug 'hashivim/vim-terraform'

" Plug 'tmhedberg/matchit'
" Plug 'sirver/ultisnips'
" Plugin 'honza/vim-snippets'
" Plug 'karlbright/qfdo.vim'
" Plug 'suan/vim-instant-markdown', { 'for': 'markdown' }
" Plug 'flowtype/vim-flow', { 'for': ['javascript', 'js', 'jsx', 'javascript.jsx']}
" Plug 'othree/javascript-libraries-syntax.vim'
" Plug 'othree/yajs.vim'
" Plug 'othree/es.next.syntax.vim'
" Plug 'othree/jspc.vim'
" Plug 'mxw/vim-jsx'
" Plug 'maralla/completor.vim', { 'do': 'make js' }
" Plug 'ludovicchabant/vim-gutentags'
" Plug 'skywind3000/gutentags_plus'
" Plug 'ervandew/supertab'
" Plug 'godlygeek/tabular'
" Plug 'unblevable/quick-scope' " hl unique chars per word/line for f, F etc 
" Plug 'pboettch/vim-highlight-cursor-words'

" Arduino
Plug 'stevearc/vim-arduino'

call plug#end()
