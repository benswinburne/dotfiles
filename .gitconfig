[alias]
  # General
  s = status
  a = add
  aa = add --all
  c = commit
  p = push
  pu = push -u origin
  d = diff
  dc = diff --cached
  dat-d = "!echo Filthy"

  # branch
  b = branch
  bd = branch -D
  ch = checkout
  co = checkout
  chb = checkout -b
  cob = checkout -b
  branch-date = !git for-each-ref --sort='-authordate' --format='%(refname)%09%(authordate)' refs/heads | sed -e 's-refs/heads/--'

  # stash
  st = stash
  sts = stash save
  stl = stash list
  sta = "!f() { git stash apply stash@{$1}; }; f"
  std = "!f() { git stash drop stash@{$1}; }; f"
  stsh = "!f() { git stash show -p stash@{$1}; }; f"

  # listing
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

  # file history
  filelog = log -u
  dl = "!git ll -1"                              # Show modified files in last commit
  dlc = diff --cached HEAD^                      # Show a diff last commit
  changes = whatchanged --since='2 weeks ago'    # Show log of changes in the last 2 weeks
  sincedev = !git log --no-merges --stat --reverse develop..  # Show all changes since merging from develop
  vistree = !git log --pretty=oneline --graph --decorate --all # Visualise the version tree

  # meta
  la = "!git config -l | grep alias | cut -c 7-" # List all of my aliases

  # tags
  lasttag = describe --tags --abbrev=0           # Show the last tag
  lt = describe --tags --abbrev=0                # Show the last tag

  # merging
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

  # resetting
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  undo-commit = reset --soft HEAD~1

  # housekeeping
  prune = remote prune origin
  clean-merged = !git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d
	undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"


[core]
	# Use custom `.gitignore`
	excludesfile = ~/.gitignore
	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space
	editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX
	preloadindex = true
[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[user]
	name = benswinburne
	email = ben.swinburne@gmail.com
[push]
	default = tracking
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[branch]
	autosetuprebase = always
[github]
	user = benswinburne
[ghi]
	token = !security find-internet-password -a benswinburne -s github.com -l 'ghi token' -w
[fetch]
	prune = true
[help]
	autoCorrect = -1
[gc]
	auto = 256
